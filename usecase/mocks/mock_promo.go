// Code generated by MockGen. DO NOT EDIT.
// Source: ./promo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dto "hangry/domain/dto"
	models "hangry/domain/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPromoUsecase is a mock of PromoUsecase interface.
type MockPromoUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockPromoUsecaseMockRecorder
}

// MockPromoUsecaseMockRecorder is the mock recorder for MockPromoUsecase.
type MockPromoUsecaseMockRecorder struct {
	mock *MockPromoUsecase
}

// NewMockPromoUsecase creates a new mock instance.
func NewMockPromoUsecase(ctrl *gomock.Controller) *MockPromoUsecase {
	mock := &MockPromoUsecase{ctrl: ctrl}
	mock.recorder = &MockPromoUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromoUsecase) EXPECT() *MockPromoUsecaseMockRecorder {
	return m.recorder
}

// CreatePromo mocks base method.
func (m *MockPromoUsecase) CreatePromo(ctx context.Context, dto dto.CreatePromoInput) (uint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePromo", ctx, dto)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePromo indicates an expected call of CreatePromo.
func (mr *MockPromoUsecaseMockRecorder) CreatePromo(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePromo", reflect.TypeOf((*MockPromoUsecase)(nil).CreatePromo), ctx, dto)
}

// ExtendPromo mocks base method.
func (m *MockPromoUsecase) ExtendPromo(ctx context.Context, dto dto.ExtendPromoInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtendPromo", ctx, dto)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExtendPromo indicates an expected call of ExtendPromo.
func (mr *MockPromoUsecaseMockRecorder) ExtendPromo(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtendPromo", reflect.TypeOf((*MockPromoUsecase)(nil).ExtendPromo), ctx, dto)
}

// GetPromo mocks base method.
func (m *MockPromoUsecase) GetPromo(ctx context.Context, dto dto.GetPromoInput) ([]models.Promo, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPromo", ctx, dto)
	ret0, _ := ret[0].([]models.Promo)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetPromo indicates an expected call of GetPromo.
func (mr *MockPromoUsecaseMockRecorder) GetPromo(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPromo", reflect.TypeOf((*MockPromoUsecase)(nil).GetPromo), ctx, dto)
}
